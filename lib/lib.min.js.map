{"version":3,"sources":["webpack://Muta/webpack/universalModuleDefinition","webpack://Muta/webpack/bootstrap","webpack://Muta/./src/ajax.js","webpack://Muta/./src/index.js","webpack://Muta/./src/logger.js","webpack://Muta/./src/component-registry.js","webpack://Muta/./src/component.js","webpack://Muta/./node_modules/tinybind/dist/tinybind.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Ajax","url","request","XMLHttpRequest","Promise","resolve","reject","open","onload","status","response","responseText","onerror","send","logger","_logger2","default","pageData","logError","endMutaGroup","_componentRegistry2","main","Muta","Logger","ComponentRegistry","_classCallCheck","this","initializeLogActive","initializeGroupStarted","logActive","isActive","activateLog","deactivateLog","groupStarted","isGroupStarted","_startGroup","_endGroup","console","groupCollapsed","groupEnd","title","errorMsg","startMutaGroup","warn","infoMsg","log","uri","componentDefinitions","components","loadComponentDefinitions","_ajax2","then","setComponentDefinitions","catch","handleError","componentData","JSON","parse","logInfo","loadComponents","errorMessage","componentName","componentUri","component","_component2","Component","onCreate","definitionUrl","templateUrl","all","parseComponentDefinition","storeTemplateData","onRender","dereferenceDocumentElements","documentElements","document","getElementsByTagName","elemIdx","length","element","elemData","dereferenceElementData","definition","interface","injectTemplateData","templateData","componentDefinition","elementInterface","attrIdx","elemAttrName","snakeToCamelCase","elemAttrValue","dereferenceElementValue","elemValue","dataset","indexOf","pageDataAttrName","replace","elemTemplate","elemId","newElement","parseHtml","setAttribute","outerHTML","bindableElem","getElementById","_tinybind2","str","toUpperCase","htmlString","nodeDocument","implementation","createHTMLDocument","body","innerHTML","children","OPTIONS","EXTENSIONS","PRIMITIVE","KEYPATH","TEXT","BINDING","QUOTED_STR","parseType","string","type","test","slice","undefined","isNaN","Number","parseTemplate","template","delimiters","tokens","index","lastIndex","close","push","substring","lastToken","trim","adapters","interfaces","rootInterface","tinybind","binders","formatters","_prefix","_fullPrefix","prefix","templateDelimiters","preloadData","handler","context","ev","binding","view","models","fallbackBinder","el","removeAttribute","configure","options","_this","keys","forEach","option","isObject","obj","Observer","keypath","callback","objectPath","getRootObject","target","realize","set","updateOptions","tokenize","chr","current","path","charAt","_proto","message","Error","error","substr","pop","prev","token","unreached","splice","sync","next","oldValue","newValue","Function","Array","setValue","active","action","unobserve","rootProp","$parent","FORMATTER_ARGS","FORMATTER_SPLIT","Binding","binder","arg","formatterObservers","model","observe","parseTarget","observer","parseFormatterArguments","args","formatterIndex","map","_ref","ai","formattedValue","_this2","reduce","result","declaration","match","id","shift","formatter","processedArgs","read","apply","concat","eventHandler","fn","function","routineFn","routine","publish","_this3","reduceRight","split","getValue","unbind","_this4","fi","update","checked","results","selected","getInputValue","textBinder","node","data","DECLARATION_SPLIT","parseNode","block","nodeType","text","createTextNode","parentNode","insertBefore","buildBinding","removeChild","traverse","_i","childNodes","bindingComparator","a","b","aPriority","priority","bPriority","trimStr","View","els","jquery","build","pipes","bindings","len","elements","sort","identifier","bindingPrefix","nodeName","attributes","bindInfos","starBinders","attribute","k","attr","_i2","bindInfo","publishes","ARRAY_METHODS","adapter","counter","weakmap","weakReference","__rv","callbacks","cleanupWeakReference","refId","pointers","stubFunction","original","_len","arguments","_key","observeArray","unobserveArray","idx","desc","getOwnPropertyDescriptor","configurable","_callbacks","cb","getString","toString","createView","anchorEl","cloneNode","marker","on-*","removeEventListener","addEventListener","each-*","iterated","createComment","collection","modelName","indexProp","getAttribute","matchIndex","nextView","nextIndex","previous","nextSibling","times","class-*","elClass","className","textContent","html","show","style","display","hide","enabled","disabled","self","isRadio","tagName","event","if","bound","nested","attached","_defineProperties","props","descriptor","writable","_getPrototypeOf","setPrototypeOf","getPrototypeOf","__proto__","_setPrototypeOf","_construct","Parent","Class","Reflect","construct","sham","Proxy","Date","e","isNativeReflectConstruct","Constructor","instance","_wrapNativeSuper","_cache","Map","TypeError","has","Wrapper","constructor","_HTMLElement","subClass","superClass","protoProps","staticProps","connectedCallback","nodes","__templateEl","content","__tinybindView","firstChild","appendChild","disconnectedCallback","attributeChangedCallback","old","propName","__propAttributeMap","createElement","propAttributeMap","properties","propConfig","attrName","HTMLElement","watch","not","negate","viewOptions","extensionType","filter"],"mappings":"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","file":"lib.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Muta\"] = factory();\n\telse\n\t\troot[\"Muta\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","export default class Ajax{\r\n\r\n\tstatic get(url){\r\n\t\tconst request = new XMLHttpRequest();\r\n\t\treturn new Promise(function(resolve, reject) {\r\n\t\t\trequest.open('GET', url, true);\r\n\r\n\t\t\trequest.onload = function() {\r\n\t\t\t\tif (request.status >= 200 && request.status < 400) {\r\n\t\t\t\t\tvar response = request.responseText;\r\n\t\t\t\t\tresolve(response);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treject(\"Server returned error code '\" + request.status + \"'\");\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\trequest.onerror = function(){\r\n\t\t\t\treject(\"Server connection error.\");\r\n\t\t\t}\r\n\r\n\t\t\trequest.send();\r\n\t\t});\r\n\t}\r\n\r\n}","import Logger \t\t\t\tfrom './logger';\r\nimport ComponentRegistry \tfrom './component-registry';\r\n\r\nfunction main(){\r\n\tlet logger = new Logger();\r\n\r\n\tif(! window.pageData){\r\n\t\tlogger.logError(\"No PageData\", \"No page data is available for Muta parsing.\");\r\n\t\tlogger.endMutaGroup();\r\n\t\treturn;\r\n\t}\r\n\r\n\tlet registry = new ComponentRegistry(logger, \"./demo-registry.json\");\r\n\tlogger.endMutaGroup();\r\n}\r\n\r\nmain();\r\n\r\nexport let Muta = {\r\n\tLogger,\r\n\tComponentRegistry\r\n};\r\n","\r\nexport default class Logger{\r\n\r\n\tconstructor(){\r\n\t\tthis.initializeLogActive();\r\n\t\tthis.initializeGroupStarted();\r\n\t}\r\n\r\n\tinitializeLogActive(){\r\n\t\tlet logActive = true;\r\n\t\tthis.isActive \t\t= function(){ return logActive; }\r\n\t\tthis.activateLog \t= function(){ logActive = true; }\r\n\t\tthis.deactivateLog \t= function(){ logActive = false;}\r\n\t}\r\n\r\n\tinitializeGroupStarted(){\r\n\t\tlet groupStarted = false;\r\n\t\tthis.isGroupStarted\t= function(){ return groupStarted; }\r\n\t\tthis._startGroup \t= function(){ groupStarted = true; }\r\n\t\tthis._endGroup \t\t= function(){ groupStarted = false;}\r\n\t}\r\n\r\n\tstartMutaGroup(){\r\n\t\tif( !this.isActive() )\r\n\t\t\treturn;\r\n\r\n\t\tconsole.groupCollapsed(\"%cMuta\", \"color: #1fbb16;\");\r\n\t\tthis._startGroup();\r\n\t}\r\n\r\n\tendMutaGroup(){\r\n\t\tif( !this.isActive() )\r\n\t\t\treturn;\r\n\r\n\t\tconsole.groupEnd()\r\n\t\tthis._endGroup();\r\n\t}\r\n\r\n\tlogError(title, errorMsg){\r\n\t\tif( !this.isActive() )\r\n\t\t\treturn;\r\n\r\n\t\tif( !this.isGroupStarted() )\r\n\t\t\tthis.startMutaGroup();\r\n\r\n\t\tconsole.warn(\"%c\" + title, \"color: #e74c3c;\", errorMsg);\r\n\t}\r\n\r\n\tlogInfo(title, infoMsg){\r\n\t\tif( !this.isActive() )\r\n\t\t\treturn;\r\n\r\n\t\tif( !this.isGroupStarted() )\r\n\t\t\tthis.startMutaGroup();\r\n\r\n\t\tconsole.log(\"%c\" + title, \"color: #3498db;\", infoMsg);\r\n\t}\r\n}","import Ajax \t\tfrom './ajax';\r\nimport Component\tfrom './component';\r\n\r\nexport default class ComponentRegistry{\r\n\r\n\tconstructor(logger, uri){\r\n\t\tthis.logger \t\t\t\t= logger;\r\n\t\tthis.componentDefinitions \t= {};\r\n\t\tthis.components \t\t\t= {};\r\n\t\tthis.loadComponentDefinitions(uri);\r\n\t}\r\n\r\n\tloadComponentDefinitions(uri){\r\n\t\tAjax.get(uri)\r\n\t\t\t.then(\tthis.setComponentDefinitions.bind(this))\r\n\t\t\t.catch(\tthis.handleError.bind(this));\r\n\t}\r\n\r\n\tsetComponentDefinitions(componentData){\r\n\t\tthis.componentDefinitions = JSON.parse(componentData);\r\n\r\n\t\tif(this.logger)\r\n\t\t\tthis.logger.logInfo(\"Component registry loaded:\", this.componentDefinitions);\r\n\r\n\t\tthis.loadComponents();\r\n\t}\r\n\r\n\thandleError(errorMessage){\r\n\t\tif(this.logger)\r\n\t\t\tthis.logger.logError(\"Registry Error: Load components:\", errorMessage);\r\n\t}\r\n\r\n\tloadComponents(){\r\n\t\tfor(let componentName in this.componentDefinitions){\r\n\t\t\tconst componentUri \t= this.componentDefinitions[componentName];\r\n\t\t\tconst component \t= new Component(this.logger, \r\n\t\t\t\t\t\t\t\t\t\t\t\tcomponentName, \r\n\t\t\t\t\t\t\t\t\t\t\t\tcomponentUri);\r\n\t\t\tthis.components[componentName] = component;\r\n\t\t}\r\n\t}\r\n}","import Ajax from './ajax';\r\nimport tinybind from 'tinybind'\r\n\r\nexport default class Component{\r\n\r\n\tconstructor(logger, name, uri){\r\n\t\tthis.name \t= name;\r\n\t\tthis.uri \t= uri;\r\n\r\n\t\tthis.logger = logger;\r\n\t\tif(this.logger)\r\n\t\t\tthis.logger.logInfo(\"Component initialized\", this);\r\n\r\n\t\tthis.onCreate();\r\n\t}\r\n\r\n\tonCreate(){\r\n\t\tconst uri \t\t\t= this.uri;\r\n\t\tconst definitionUrl = uri + \"/definition.json\";\r\n\t\tconst templateUrl \t= uri + \"/template.html\";\r\n\t\t\r\n\t\tPromise.all([\tAjax.get(definitionUrl).then(\tthis.parseComponentDefinition.bind(this)),\r\n\t\t\t\t\t\tAjax.get(templateUrl).then(\t\tthis.storeTemplateData.bind(this))])\r\n\t\t\t\t.then(\tthis.onRender.bind(this))\r\n\t\t\t\t.catch(\tthis.handleError.bind(this));\r\n\t}\r\n\r\n\t/*onLoad(){\r\n\t\tif(this.logger){\r\n\t\t\tthis.logger.logInfo(\"- Definition\", this.definition);\r\n\t\t\tthis.logger.logInfo(\"- Template\", \tthis.templateData);\r\n\t\t\tthis.logger.logInfo(\"Component loaded\", this.name);\r\n\t\t}\r\n\t}*/\r\n\r\n\tonRender(){\r\n\t\tthis.dereferenceDocumentElements();\r\n\t\tif(this.logger)\r\n\t\t\tthis.logger.logInfo(\"Component rendered\", this.name);\r\n\t}\r\n\r\n\tonDestroy(){\r\n\t\t// Not sure if this is necessary\r\n\t\tif(this.logger)\r\n\t\t\tthis.logger.logInfo(\"Component destroyed\", this.name);\r\n\t}\r\n\t\r\n\tdereferenceDocumentElements(){\r\n\t\tlet documentElements \t= document.getElementsByTagName(this.name);\r\n\t\tlet pageData \t\t\t= window.pageData;\r\n\r\n\t\tfor(var elemIdx = 0; elemIdx < documentElements.length; elemIdx++){\r\n\t\t\tconst element \t= documentElements[elemIdx];\r\n\t\t\tconst elemData \t= this.dereferenceElementData(pageData, element, this.definition.interface);\r\n\t\t\t\r\n\t\t\tthis.injectTemplateData(element, elemData, this.templateData);\r\n\t\t}\r\n\t}\r\n\r\n\tparseComponentDefinition(componentDefinition){\r\n\t\treturn new Promise(function(resolve, reject){\r\n\t\t\tthis.definition = JSON.parse(componentDefinition);\r\n\t\t\tresolve();\r\n\t\t}.bind(this));\r\n\t}\r\n\r\n\tstoreTemplateData(templateData){\t\t\r\n\t\treturn new Promise(function(resolve, reject){\r\n\t\t\tthis.templateData = templateData;\r\n\t\t\tresolve();\r\n\t\t}.bind(this));\r\n\t}\r\n\r\n\thandleError(errorMessage){\r\n\t\tlet logger \t= this.logger;\r\n\t\tif(logger)\r\n\t\t\tlogger.logError(\"Component Error: OnLoad:\", errorMessage);\r\n\t}\r\n\r\n\tdereferenceElementData(pageData, element, elementInterface){\r\n\t\tlet elemData = {};\r\n\r\n\t\tfor (var attrIdx = elementInterface.length - 1; attrIdx >= 0; attrIdx--) {\r\n\t\t\tconst elemAttrName \t= this.snakeToCamelCase(elementInterface[attrIdx]);\r\n\t\t\tconst elemAttrValue = this.dereferenceElementValue(pageData, element, elemAttrName);\r\n\r\n\t\t\telemData[elemAttrName] = elemAttrValue;\r\n\t\t}\r\n\r\n\t\treturn elemData;\r\n\t}\r\n\r\n\tdereferenceElementValue(pageData, element, elemAttrName){\r\n\t\tlet elemValue = element.dataset[elemAttrName];\r\n\t\tif(elemValue.indexOf(\"pageData.\") !== 0)\r\n\t\t\treturn elemValue;\r\n\r\n\t\tconst pageDataAttrName = elemValue.replace(\"pageData.\", \"\");\r\n\t\tif(! pageDataAttrName in pageData)\r\n\t\t\treturn \"\";\r\n\r\n\t\treturn pageData[pageDataAttrName];\r\n\t}\r\n\r\n\tinjectTemplateData(element, elemData, elemTemplate){\r\n\t\tconst elemId \t\t= elemData[\"id\"];\r\n\r\n\t\tconst newElement = this.parseHtml(elemTemplate);\r\n\t\tnewElement.setAttribute(\"id\", \telemId);\r\n\t\telement.outerHTML = newElement.outerHTML;\r\n\r\n\t\t//const elemSelector \t= \"#\" + elemId;\r\n\t\tconst bindableElem = document.getElementById(elemId);\r\n\t\tconsole.log(\"Binding to\", bindableElem);\r\n\t\ttinybind.bind(bindableElem, elemData);\r\n\t}\r\n\r\n\tsnakeToCamelCase(str){\r\n\t\treturn str.replace(/(-\\w)/g, function(m){return m[1].toUpperCase();});\r\n\t}\r\n\r\n\tparseHtml(htmlString) {\r\n\t\tvar nodeDocument = document.implementation.createHTMLDocument();\r\n\t\tnodeDocument.body.innerHTML = htmlString;\r\n\t\tconsole.log(nodeDocument.body.children);\r\n\t\treturn nodeDocument.body.children[0];\r\n\t};\r\n}","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.tinybind = factory());\n}(this, function () { 'use strict';\n\n  var OPTIONS = ['prefix', 'templateDelimiters', 'rootInterface', 'preloadData', 'handler'];\n  var EXTENSIONS = ['binders', 'formatters', 'adapters'];\n\n  var PRIMITIVE = 0;\n  var KEYPATH = 1;\n  var TEXT = 0;\n  var BINDING = 1;\n  var QUOTED_STR = /^'.*'$|^\".*\"$/; // Parser and tokenizer for getting the type and value from a string.\n\n  function parseType(string) {\n    var type = PRIMITIVE;\n    var value = string;\n\n    if (QUOTED_STR.test(string)) {\n      value = string.slice(1, -1);\n    } else if (string === 'true') {\n      value = true;\n    } else if (string === 'false') {\n      value = false;\n    } else if (string === 'null') {\n      value = null;\n    } else if (string === 'undefined') {\n      value = undefined;\n    } else if (!isNaN(string)) {\n      value = Number(string);\n    } else {\n      type = KEYPATH;\n    }\n\n    return {\n      type: type,\n      value: value\n    };\n  } // Template parser and tokenizer for mustache-style text content bindings.\n  // Parses the template and returns a set of tokens, separating static portions\n  // of text from binding declarations.\n\n  function parseTemplate(template, delimiters) {\n    var tokens;\n    var length = template.length;\n    var index = 0;\n    var lastIndex = 0;\n    var open = delimiters[0],\n        close = delimiters[1];\n\n    while (lastIndex < length) {\n      index = template.indexOf(open, lastIndex);\n\n      if (index < 0) {\n        if (tokens) {\n          tokens.push({\n            type: TEXT,\n            value: template.slice(lastIndex)\n          });\n        }\n\n        break;\n      } else {\n        tokens || (tokens = []);\n\n        if (index > 0 && lastIndex < index) {\n          tokens.push({\n            type: TEXT,\n            value: template.slice(lastIndex, index)\n          });\n        }\n\n        lastIndex = index + open.length;\n        index = template.indexOf(close, lastIndex);\n\n        if (index < 0) {\n          var substring = template.slice(lastIndex - close.length);\n          var lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && lastToken.type === TEXT) {\n            lastToken.value += substring;\n          } else {\n            tokens.push({\n              type: TEXT,\n              value: substring\n            });\n          }\n\n          break;\n        }\n\n        var value = template.slice(lastIndex, index).trim();\n        tokens.push({\n          type: BINDING,\n          value: value\n        });\n        lastIndex = index + close.length;\n      }\n    }\n\n    return tokens;\n  }\n\n  var tinybind = {\n    // Global binders.\n    binders: {},\n    // Global formatters.\n    formatters: {},\n    // Global sightglass adapters.\n    adapters: {},\n    // Default attribute prefix.\n    _prefix: 'rv',\n    _fullPrefix: 'rv-',\n\n    get prefix() {\n      return this._prefix;\n    },\n\n    set prefix(value) {\n      this._prefix = value;\n      this._fullPrefix = value + '-';\n    },\n\n    parseTemplate: parseTemplate,\n    parseType: parseType,\n    // Default template delimiters.\n    templateDelimiters: ['{', '}'],\n    // Default sightglass root interface.\n    rootInterface: '.',\n    // Preload data by default.\n    preloadData: true,\n    // Default event handler.\n    handler: function handler(context, ev, binding) {\n      this.call(context, ev, binding.view.models);\n    },\n    // Sets the attribute on the element. If no binder above is matched it will fall\n    // back to using this binder.\n    fallbackBinder: function fallbackBinder(el, value) {\n      if (value != null) {\n        el.setAttribute(this.type, value);\n      } else {\n        el.removeAttribute(this.type);\n      }\n    },\n    // Merges an object literal into the corresponding global options.\n    configure: function configure(options) {\n      var _this = this;\n\n      if (!options) {\n        return;\n      }\n\n      Object.keys(options).forEach(function (option) {\n        var value = options[option];\n\n        if (EXTENSIONS.indexOf(option) > -1) {\n          Object.keys(value).forEach(function (key) {\n            _this[option][key] = value[key];\n          });\n        } else {\n          _this[option] = value;\n        }\n      });\n    }\n  };\n\n  // Check if a value is an object than can be observed.\n  function isObject(obj) {\n    return typeof obj === 'object' && obj !== null;\n  } // Error thrower.\n\n\n  function error(message) {\n    throw new Error(\"[Observer] \" + message);\n  }\n\n  var adapters;\n  var interfaces;\n  var rootInterface; // Constructs a new keypath observer and kicks things off.\n\n  var Observer =\n  /*#__PURE__*/\n  function () {\n    Observer.updateOptions = function updateOptions(options) {\n      adapters = options.adapters;\n      interfaces = Object.keys(adapters);\n      rootInterface = options.rootInterface;\n    } // Tokenizes the provided keypath string into interface + path tokens for the\n    // observer to work with.\n    ;\n\n    Observer.tokenize = function tokenize(keypath, root) {\n      var tokens = [];\n      var current = {\n        i: root,\n        path: ''\n      };\n      var index;\n      var chr;\n\n      for (index = 0; index < keypath.length; index++) {\n        chr = keypath.charAt(index);\n\n        if (!!~interfaces.indexOf(chr)) {\n          tokens.push(current);\n          current = {\n            i: chr,\n            path: ''\n          };\n        } else {\n          current.path += chr;\n        }\n      }\n\n      tokens.push(current);\n      return tokens;\n    };\n\n    function Observer(obj, keypath, callback) {\n      this.keypath = keypath;\n      this.callback = callback;\n      this.objectPath = [];\n      this.parse();\n      this.obj = this.getRootObject(obj);\n\n      if (isObject(this.target = this.realize())) {\n        this.set(true, this.key, this.target, this.callback);\n      }\n    } // Parses the keypath using the interfaces defined on the view. Sets variables\n    // for the tokenized keypath as well as the end key.\n\n\n    var _proto = Observer.prototype;\n\n    _proto.parse = function parse() {\n      var path;\n      var root;\n\n      if (!interfaces.length) {\n        error('Must define at least one adapter interface.');\n      }\n\n      if (!!~interfaces.indexOf(this.keypath[0])) {\n        root = this.keypath[0];\n        path = this.keypath.substr(1);\n      } else {\n        root = rootInterface;\n        path = this.keypath;\n      }\n\n      this.tokens = Observer.tokenize(path, root);\n      this.key = this.tokens.pop();\n    } // Realizes the full keypath, attaching observers for every key and correcting\n    // old observers to any changed objects in the keypath.\n    ;\n\n    _proto.realize = function realize() {\n      var current = this.obj;\n      var unreached = -1;\n      var prev;\n      var token;\n\n      for (var index = 0; index < this.tokens.length; index++) {\n        token = this.tokens[index];\n\n        if (isObject(current)) {\n          if (typeof this.objectPath[index] !== 'undefined') {\n            if (current !== (prev = this.objectPath[index])) {\n              this.set(false, token, prev, this);\n              this.set(true, token, current, this);\n              this.objectPath[index] = current;\n            }\n          } else {\n            this.set(true, token, current, this);\n            this.objectPath[index] = current;\n          }\n\n          current = this.get(token, current);\n        } else {\n          if (unreached === -1) {\n            unreached = index;\n          }\n\n          if (prev = this.objectPath[index]) {\n            this.set(false, token, prev, this);\n          }\n        }\n      }\n\n      if (unreached !== -1) {\n        this.objectPath.splice(unreached);\n      }\n\n      return current;\n    } // Updates the keypath. This is called when any intermediary key is changed.\n    ;\n\n    _proto.sync = function sync() {\n      var next;\n      var oldValue;\n      var newValue;\n\n      if ((next = this.realize()) !== this.target) {\n        if (isObject(this.target)) {\n          this.set(false, this.key, this.target, this.callback);\n        }\n\n        if (isObject(next)) {\n          this.set(true, this.key, next, this.callback);\n        }\n\n        oldValue = this.value();\n        this.target = next;\n        newValue = this.value();\n        if (newValue !== oldValue || newValue instanceof Function) this.callback.sync();\n      } else if (next instanceof Array) {\n        this.callback.sync();\n      }\n    } // Reads the current end value of the observed keypath. Returns undefined if\n    // the full keypath is unreachable.\n    ;\n\n    _proto.value = function value() {\n      if (isObject(this.target)) {\n        return this.get(this.key, this.target);\n      }\n    } // Sets the current end value of the observed keypath. Calling setValue when\n    // the full keypath is unreachable is a no-op.\n    ;\n\n    _proto.setValue = function setValue(value) {\n      if (isObject(this.target)) {\n        adapters[this.key.i].set(this.target, this.key.path, value);\n      }\n    } // Gets the provided key on an object.\n    ;\n\n    _proto.get = function get(key, obj) {\n      return adapters[key.i].get(obj, key.path);\n    } // Observes or unobserves a callback on the object using the provided key.\n    ;\n\n    _proto.set = function set(active, key, obj, callback) {\n      var action = active ? 'observe' : 'unobserve';\n      adapters[key.i][action](obj, key.path, callback);\n    } // Unobserves the entire keypath.\n    ;\n\n    _proto.unobserve = function unobserve() {\n      var obj;\n      var token;\n\n      for (var index = 0; index < this.tokens.length; index++) {\n        token = this.tokens[index];\n\n        if (obj = this.objectPath[index]) {\n          this.set(false, token, obj, this);\n        }\n      }\n\n      if (isObject(this.target)) {\n        this.set(false, this.key, this.target, this.callback);\n      }\n    } // traverse the scope chain to find the scope which has the root property\n    // if the property is not found in chain, returns the root scope\n    ;\n\n    _proto.getRootObject = function getRootObject(obj) {\n      var rootProp;\n      var current;\n\n      if (!obj.$parent) {\n        return obj;\n      }\n\n      if (this.tokens.length) {\n        rootProp = this.tokens[0].path;\n      } else {\n        rootProp = this.key.path;\n      }\n\n      current = obj;\n\n      while (current.$parent && current[rootProp] === undefined) {\n        current = current.$parent;\n      }\n\n      return current;\n    };\n\n    return Observer;\n  }();\n\n  function getInputValue(el) {\n    if (el.type === 'checkbox') {\n      return el.checked;\n    } else if (el.type === 'select-multiple') {\n      var results = [];\n      var option;\n\n      for (var i = 0; i < el.options.length; i++) {\n        option = el.options[i];\n\n        if (option.selected) {\n          results.push(option.value);\n        }\n      }\n\n      return results;\n    } else {\n      return el.value;\n    }\n  }\n\n  var FORMATTER_ARGS = /[^\\s']+|'([^']|'[^\\s])*'|\"([^\"]|\"[^\\s])*\"/g;\n  var FORMATTER_SPLIT = /\\s+/; // A single binding between a model attribute and a DOM element.\n\n  var Binding =\n  /*#__PURE__*/\n  function () {\n    // All information about the binding is passed into the constructor; the\n    // containing view, the DOM node, the type of binding, the model object and the\n    // keypath at which to listen for changes.\n    function Binding(view, el, type, keypath, binder, arg, formatters) {\n      this.view = view;\n      this.el = el;\n      this.type = type;\n      this.keypath = keypath;\n      this.binder = binder;\n      this.arg = arg;\n      this.formatters = formatters;\n      this.formatterObservers = {};\n      this.model = undefined;\n    } // Observes the object keypath\n\n\n    var _proto = Binding.prototype;\n\n    _proto.observe = function observe(obj, keypath) {\n      return new Observer(obj, keypath, this);\n    };\n\n    _proto.parseTarget = function parseTarget() {\n      if (this.keypath) {\n        var token = parseType(this.keypath);\n\n        if (token.type === 0) {\n          this.value = token.value;\n        } else {\n          this.observer = this.observe(this.view.models, this.keypath);\n          this.model = this.observer.target;\n        }\n      } else {\n        this.value = undefined;\n      }\n    };\n\n    _proto.parseFormatterArguments = function parseFormatterArguments(args, formatterIndex) {\n      var _this = this;\n\n      return args.map(parseType).map(function (_ref, ai) {\n        var type = _ref.type,\n            value = _ref.value;\n\n        if (type === 0) {\n          return value;\n        } else {\n          if (!_this.formatterObservers[formatterIndex]) {\n            _this.formatterObservers[formatterIndex] = {};\n          }\n\n          var observer = _this.formatterObservers[formatterIndex][ai];\n\n          if (!observer) {\n            observer = _this.observe(_this.view.models, value);\n            _this.formatterObservers[formatterIndex][ai] = observer;\n          }\n\n          return observer.value();\n        }\n      });\n    } // Applies all the current formatters to the supplied value and returns the\n    // formatted value.\n    ;\n\n    _proto.formattedValue = function formattedValue(value) {\n      var _this2 = this;\n\n      return this.formatters.reduce(function (result, declaration, index) {\n        var args = declaration.match(FORMATTER_ARGS);\n        var id = args.shift();\n        var formatter = _this2.view.options.formatters[id];\n\n        var processedArgs = _this2.parseFormatterArguments(args, index);\n\n        if (formatter && formatter.read instanceof Function) {\n          result = formatter.read.apply(formatter, [result].concat(processedArgs));\n        } else if (formatter instanceof Function) {\n          result = formatter.apply(void 0, [result].concat(processedArgs));\n        }\n\n        return result;\n      }, value);\n    } // Returns an event handler for the binding around the supplied function.\n    ;\n\n    _proto.eventHandler = function eventHandler(fn) {\n      var binding = this;\n      var handler = binding.view.options.handler;\n      return function (ev) {\n        handler.call(fn, this, ev, binding);\n      };\n    } // Sets the value for the binding. This Basically just runs the binding routine\n    // with the supplied value formatted.\n    ;\n\n    _proto.set = function set(value) {\n      if (value instanceof Function && !this.binder.function) {\n        value = this.formattedValue(value.call(this.model));\n      } else {\n        value = this.formattedValue(value);\n      }\n\n      var routineFn = this.binder.routine || this.binder;\n\n      if (routineFn instanceof Function) {\n        routineFn.call(this, this.el, value);\n      }\n    } // Syncs up the view binding with the model.\n    ;\n\n    _proto.sync = function sync() {\n      if (this.observer) {\n        this.model = this.observer.target;\n        this.set(this.observer.value());\n      } else {\n        this.set(this.value);\n      }\n    } // Publishes the value currently set on the input element back to the model.\n    ;\n\n    _proto.publish = function publish() {\n      var _this3 = this;\n\n      if (this.observer) {\n        var value = this.formatters.reduceRight(function (result, declaration, index) {\n          var args = declaration.split(FORMATTER_SPLIT);\n          var id = args.shift();\n          var formatter = _this3.view.options.formatters[id];\n\n          var processedArgs = _this3.parseFormatterArguments(args, index);\n\n          if (formatter && formatter.publish) {\n            result = formatter.publish.apply(formatter, [result].concat(processedArgs));\n          }\n\n          return result;\n        }, this.getValue(this.el));\n        this.observer.setValue(value);\n      }\n    } // Subscribes to the model for changes at the specified keypath. Bi-directional\n    // routines will also listen for changes on the element to propagate them back\n    // to the model.\n    ;\n\n    _proto.bind = function bind() {\n      this.parseTarget();\n\n      if (this.binder.hasOwnProperty('bind')) {\n        this.binder.bind.call(this, this.el);\n      }\n\n      if (this.view.options.preloadData) {\n        this.sync();\n      }\n    } // Unsubscribes from the model and the element.\n    ;\n\n    _proto.unbind = function unbind() {\n      var _this4 = this;\n\n      if (this.binder.unbind) {\n        this.binder.unbind.call(this, this.el);\n      }\n\n      if (this.observer) {\n        this.observer.unobserve();\n      }\n\n      Object.keys(this.formatterObservers).forEach(function (fi) {\n        var args = _this4.formatterObservers[fi];\n        Object.keys(args).forEach(function (ai) {\n          args[ai].unobserve();\n        });\n      });\n      this.formatterObservers = {};\n    } // Updates the binding's model from what is currently set on the view. Unbinds\n    // the old model first and then re-binds with the new model.\n    ;\n\n    _proto.update = function update(models) {\n      if (models === void 0) {\n        models = {};\n      }\n\n      if (this.observer) {\n        this.model = this.observer.target;\n      }\n\n      if (this.binder.update) {\n        this.binder.update.call(this, models);\n      }\n    } // Returns elements value\n    ;\n\n    _proto.getValue = function getValue(el) {\n      if (this.binder && this.binder.getValue) {\n        return this.binder.getValue.call(this, el);\n      } else {\n        return getInputValue(el);\n      }\n    };\n\n    return Binding;\n  }();\n\n  var textBinder = {\n    routine: function routine(node, value) {\n      node.data = value != null ? value : '';\n    }\n  };\n  var DECLARATION_SPLIT = /((?:'[^']*')*(?:(?:[^\\|']*(?:'[^']*')+[^\\|']*)+|[^\\|]+))|^$/g;\n\n  var parseNode = function parseNode(view, node) {\n    var block = false;\n\n    if (node.nodeType === 3) {\n      var tokens = parseTemplate(node.data, tinybind.templateDelimiters);\n\n      if (tokens) {\n        for (var i = 0; i < tokens.length; i++) {\n          var token = tokens[i];\n          var text = document.createTextNode(token.value);\n          node.parentNode.insertBefore(text, node);\n\n          if (token.type === 1) {\n            view.buildBinding(text, null, token.value, textBinder, null);\n          }\n        }\n\n        node.parentNode.removeChild(node);\n      }\n\n      block = true;\n    } else if (node.nodeType === 1) {\n      block = view.traverse(node);\n    }\n\n    if (!block) {\n      for (var _i = 0; _i < node.childNodes.length; _i++) {\n        parseNode(view, node.childNodes[_i]);\n      }\n    }\n  };\n\n  var bindingComparator = function bindingComparator(a, b) {\n    var aPriority = a.binder ? a.binder.priority || 0 : 0;\n    var bPriority = b.binder ? b.binder.priority || 0 : 0;\n    return bPriority - aPriority;\n  };\n\n  var trimStr = function trimStr(str) {\n    return str.trim();\n  }; // A collection of bindings built from a set of parent nodes.\n\n\n  var View =\n  /*#__PURE__*/\n  function () {\n    // The DOM elements and the model objects for binding are passed into the\n    // constructor along with any local options that should be used throughout the\n    // context of the view and it's bindings.\n    function View(els, models, options) {\n      if (els.jquery || els instanceof Array) {\n        this.els = els;\n      } else {\n        this.els = [els];\n      }\n\n      this.models = models;\n      this.options = options;\n      this.build();\n    }\n\n    var _proto = View.prototype;\n\n    _proto.buildBinding = function buildBinding(node, type, declaration, binder, arg) {\n      var pipes = declaration.match(DECLARATION_SPLIT).map(trimStr);\n      var keypath = pipes.shift();\n      this.bindings.push(new Binding(this, node, type, keypath, binder, arg, pipes));\n    } // Parses the DOM tree and builds `Binding` instances for every matched\n    // binding declaration.\n    ;\n\n    _proto.build = function build() {\n      this.bindings = [];\n      var elements = this.els,\n          i,\n          len;\n\n      for (i = 0, len = elements.length; i < len; i++) {\n        parseNode(this, elements[i]);\n      }\n\n      this.bindings.sort(bindingComparator);\n    };\n\n    _proto.traverse = function traverse(node) {\n      var bindingPrefix = tinybind._fullPrefix;\n      var block = node.nodeName === 'SCRIPT' || node.nodeName === 'STYLE';\n      var attributes = node.attributes;\n      var bindInfos = [];\n      var starBinders = this.options.starBinders;\n      var type, binder, identifier, arg;\n\n      for (var i = 0, len = attributes.length; i < len; i++) {\n        var attribute = attributes[i];\n\n        if (attribute.name.indexOf(bindingPrefix) === 0) {\n          type = attribute.name.slice(bindingPrefix.length);\n          binder = this.options.binders[type];\n          arg = undefined;\n\n          if (!binder) {\n            for (var k = 0; k < starBinders.length; k++) {\n              identifier = starBinders[k];\n\n              if (type.slice(0, identifier.length - 1) === identifier.slice(0, -1)) {\n                binder = this.options.binders[identifier];\n                arg = type.slice(identifier.length - 1);\n                break;\n              }\n            }\n          }\n\n          if (!binder) {\n            binder = tinybind.fallbackBinder;\n          }\n\n          if (binder.block) {\n            this.buildBinding(node, type, attribute.value, binder, arg);\n            node.removeAttribute(attribute.name);\n            return true;\n          }\n\n          bindInfos.push({\n            attr: attribute,\n            binder: binder,\n            type: type,\n            arg: arg\n          });\n        }\n      }\n\n      for (var _i2 = 0; _i2 < bindInfos.length; _i2++) {\n        var bindInfo = bindInfos[_i2];\n        this.buildBinding(node, bindInfo.type, bindInfo.attr.value, bindInfo.binder, bindInfo.arg);\n        node.removeAttribute(bindInfo.attr.name);\n      }\n\n      return block;\n    } // Binds all of the current bindings for this view.\n    ;\n\n    _proto.bind = function bind() {\n      this.bindings.forEach(function (binding) {\n        binding.bind();\n      });\n    } // Unbinds all of the current bindings for this view.\n    ;\n\n    _proto.unbind = function unbind() {\n      this.bindings.forEach(function (binding) {\n        binding.unbind();\n      });\n    } // Syncs up the view with the model by running the routines on all bindings.\n    ;\n\n    _proto.sync = function sync() {\n      this.bindings.forEach(function (binding) {\n        binding.sync();\n      });\n    } // Publishes the input values from the view back to the model (reverse sync).\n    ;\n\n    _proto.publish = function publish() {\n      this.bindings.forEach(function (binding) {\n        if (binding.binder && binding.binder.publishes) {\n          binding.publish();\n        }\n      });\n    } // Updates the view's models along with any affected bindings.\n    ;\n\n    _proto.update = function update(models) {\n      var _this = this;\n\n      if (models === void 0) {\n        models = {};\n      }\n\n      Object.keys(models).forEach(function (key) {\n        _this.models[key] = models[key];\n      });\n      this.bindings.forEach(function (binding) {\n        if (binding.update) {\n          binding.update(models);\n        }\n      });\n    };\n\n    return View;\n  }();\n\n  // The default `.` adapter that comes with tinybind.js. Allows subscribing to\n  // properties on plain objects, implemented in ES5 natives using\n  // `Object.defineProperty`.\n  var ARRAY_METHODS = ['push', 'pop', 'shift', 'unshift', 'sort', 'reverse', 'splice'];\n  var adapter = {\n    counter: 0,\n    weakmap: {},\n    weakReference: function weakReference(obj) {\n      if (!obj.hasOwnProperty('__rv')) {\n        var id = this.counter++;\n        Object.defineProperty(obj, '__rv', {\n          value: id\n        });\n      }\n\n      if (!this.weakmap[obj.__rv]) {\n        this.weakmap[obj.__rv] = {\n          callbacks: {}\n        };\n      }\n\n      return this.weakmap[obj.__rv];\n    },\n    cleanupWeakReference: function cleanupWeakReference(data, refId) {\n      if (!Object.keys(data.callbacks).length) {\n        if (!(data.pointers && Object.keys(data.pointers).length)) {\n          delete this.weakmap[refId];\n        }\n      }\n    },\n    stubFunction: function stubFunction(obj, fn) {\n      var original = obj[fn];\n      var data = this.weakReference(obj);\n      var weakmap = this.weakmap;\n\n      obj[fn] = function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        var response = original.apply(obj, args);\n        Object.keys(data.pointers).forEach(function (refId) {\n          var k = data.pointers[refId];\n\n          if (weakmap[refId]) {\n            if (weakmap[refId].callbacks[k] instanceof Array) {\n              weakmap[refId].callbacks[k].forEach(function (callback) {\n                callback.sync();\n              });\n            }\n          }\n        });\n        return response;\n      };\n    },\n    observeArray: function observeArray(value, refId, keypath) {\n      var _this = this;\n\n      if (value instanceof Array) {\n        var data = this.weakReference(value);\n\n        if (!data.pointers) {\n          data.pointers = {};\n          ARRAY_METHODS.forEach(function (fn) {\n            _this.stubFunction(value, fn);\n          });\n        }\n\n        if (!data.pointers[refId]) {\n          data.pointers[refId] = [];\n        }\n\n        if (data.pointers[refId].indexOf(keypath) === -1) {\n          data.pointers[refId].push(keypath);\n        }\n      }\n    },\n    unobserveArray: function unobserveArray(value, refId, keypath) {\n      if (value instanceof Array && value.__rv != null) {\n        var data = this.weakmap[value.__rv];\n\n        if (data) {\n          var pointers = data.pointers[refId];\n\n          if (pointers) {\n            var idx = pointers.indexOf(keypath);\n\n            if (idx > -1) {\n              pointers.splice(idx, 1);\n            }\n\n            if (!pointers.length) {\n              delete data.pointers[refId];\n            }\n\n            this.cleanupWeakReference(data, value.__rv);\n          }\n        }\n      }\n    },\n    observe: function observe(obj, keypath, callback) {\n      var _this2 = this;\n\n      var value;\n      var callbacks = this.weakReference(obj).callbacks;\n\n      if (!callbacks[keypath]) {\n        callbacks[keypath] = [];\n        var desc = Object.getOwnPropertyDescriptor(obj, keypath);\n\n        if (!desc || !(desc.get || desc.set || !desc.configurable)) {\n          value = obj[keypath];\n          Object.defineProperty(obj, keypath, {\n            enumerable: true,\n            get: function get() {\n              return value;\n            },\n            set: function set(newValue) {\n              if (newValue !== value) {\n                _this2.unobserveArray(value, obj.__rv, keypath);\n\n                value = newValue;\n                var data = _this2.weakmap[obj.__rv];\n\n                if (data) {\n                  var _callbacks = data.callbacks[keypath];\n\n                  if (_callbacks) {\n                    _callbacks.forEach(function (cb) {\n                      cb.sync();\n                    });\n                  }\n\n                  _this2.observeArray(newValue, obj.__rv, keypath);\n                }\n              }\n            }\n          });\n        }\n      }\n\n      if (callbacks[keypath].indexOf(callback) === -1) {\n        callbacks[keypath].push(callback);\n      }\n\n      this.observeArray(obj[keypath], obj.__rv, keypath);\n    },\n    unobserve: function unobserve(obj, keypath, callback) {\n      var data = this.weakmap[obj.__rv];\n\n      if (data) {\n        var callbacks = data.callbacks[keypath];\n\n        if (callbacks) {\n          var idx = callbacks.indexOf(callback);\n\n          if (idx > -1) {\n            callbacks.splice(idx, 1);\n\n            if (!callbacks.length) {\n              delete data.callbacks[keypath];\n              this.unobserveArray(obj[keypath], obj.__rv, keypath);\n            }\n          }\n\n          this.cleanupWeakReference(data, obj.__rv);\n        }\n      }\n    },\n    get: function get(obj, keypath) {\n      return obj[keypath];\n    },\n    set: function set(obj, keypath, value) {\n      obj[keypath] = value;\n    }\n  };\n\n  var getString = function getString(value) {\n    return value != null ? value.toString() : undefined;\n  };\n\n  var times = function times(n, cb) {\n    for (var i = 0; i < n; i++) {\n      cb();\n    }\n  };\n\n  function createView(binding, data, anchorEl) {\n    var template = binding.el.cloneNode(true);\n    var view = new View(template, data, binding.view.options);\n    view.bind();\n    binding.marker.parentNode.insertBefore(template, anchorEl);\n    return view;\n  }\n\n  var binders = {\n    // Binds an event handler on the element.\n    'on-*': {\n      function: true,\n      priority: 1000,\n      unbind: function unbind(el) {\n        if (this.handler) {\n          el.removeEventListener(this.arg, this.handler);\n        }\n      },\n      routine: function routine(el, value) {\n        if (this.handler) {\n          el.removeEventListener(this.arg, this.handler);\n        }\n\n        this.handler = this.eventHandler(value);\n        el.addEventListener(this.arg, this.handler);\n      }\n    },\n    // Appends bound instances of the element in place for each item in the array.\n    'each-*': {\n      block: true,\n      priority: 4000,\n      bind: function bind(el) {\n        if (!this.marker) {\n          this.marker = document.createComment(\" tinybind: \" + this.type + \" \");\n          this.iterated = [];\n          el.parentNode.insertBefore(this.marker, el);\n          el.parentNode.removeChild(el);\n        } else {\n          this.iterated.forEach(function (view) {\n            view.bind();\n          });\n        }\n      },\n      unbind: function unbind(el) {\n        if (this.iterated) {\n          this.iterated.forEach(function (view) {\n            view.unbind();\n          });\n        }\n      },\n      routine: function routine(el, collection) {\n        var _this = this;\n\n        var modelName = this.arg;\n        collection = collection || [];\n        var indexProp = el.getAttribute('index-property') || '$index';\n        collection.forEach(function (model, index) {\n          var data = {\n            $parent: _this.view.models\n          };\n          data[indexProp] = index;\n          data[modelName] = model;\n          var view = _this.iterated[index];\n\n          if (!view) {\n            var previous = _this.marker;\n\n            if (_this.iterated.length) {\n              previous = _this.iterated[_this.iterated.length - 1].els[0];\n            }\n\n            view = createView(_this, data, previous.nextSibling);\n\n            _this.iterated.push(view);\n          } else {\n            if (view.models[modelName] !== model) {\n              // search for a view that matches the model\n              var matchIndex, nextView;\n\n              for (var nextIndex = index + 1; nextIndex < _this.iterated.length; nextIndex++) {\n                nextView = _this.iterated[nextIndex];\n\n                if (nextView.models[modelName] === model) {\n                  matchIndex = nextIndex;\n                  break;\n                }\n              }\n\n              if (matchIndex !== undefined) {\n                // model is in other position\n                // todo: consider avoiding the splice here by setting a flag\n                // profile performance before implementing such change\n                _this.iterated.splice(matchIndex, 1);\n\n                _this.marker.parentNode.insertBefore(nextView.els[0], view.els[0]);\n\n                nextView.models[indexProp] = index;\n              } else {\n                //new model\n                nextView = createView(_this, data, view.els[0]);\n              }\n\n              _this.iterated.splice(index, 0, nextView);\n            } else {\n              view.models[indexProp] = index;\n            }\n          }\n        });\n\n        if (this.iterated.length > collection.length) {\n          times(this.iterated.length - collection.length, function () {\n            var view = _this.iterated.pop();\n\n            view.unbind();\n\n            _this.marker.parentNode.removeChild(view.els[0]);\n          });\n        }\n\n        if (el.nodeName === 'OPTION') {\n          this.view.bindings.forEach(function (binding) {\n            if (binding.el === _this.marker.parentNode && binding.type === 'value') {\n              binding.sync();\n            }\n          });\n        }\n      },\n      update: function update(models) {\n        var _this2 = this;\n\n        var data = {}; //todo: add test and fix if necessary\n\n        Object.keys(models).forEach(function (key) {\n          if (key !== _this2.arg) {\n            data[key] = models[key];\n          }\n        });\n        this.iterated.forEach(function (view) {\n          view.update(data);\n        });\n      }\n    },\n    // Adds or removes the class from the element when value is true or false.\n    'class-*': function _class(el, value) {\n      var elClass = \" \" + el.className + \" \";\n\n      if (!value === elClass.indexOf(\" \" + this.arg + \" \") > -1) {\n        if (value) {\n          el.className = el.className + \" \" + this.arg;\n        } else {\n          el.className = elClass.replace(\" \" + this.arg + \" \", ' ').trim();\n        }\n      }\n    },\n    // Sets the element's text value.\n    text: function text(el, value) {\n      el.textContent = value != null ? value : '';\n    },\n    // Sets the element's HTML content.\n    html: function html(el, value) {\n      el.innerHTML = value != null ? value : '';\n    },\n    // Shows the element when value is true.\n    show: function show(el, value) {\n      el.style.display = value ? '' : 'none';\n    },\n    // Hides the element when value is true (negated version of `show` binder).\n    hide: function hide(el, value) {\n      el.style.display = value ? 'none' : '';\n    },\n    // Enables the element when value is true.\n    enabled: function enabled(el, value) {\n      el.disabled = !value;\n    },\n    // Disables the element when value is true (negated version of `enabled` binder).\n    disabled: function disabled(el, value) {\n      el.disabled = !!value;\n    },\n    // Checks a checkbox or radio input when the value is true. Also sets the model\n    // property when the input is checked or unchecked (two-way binder).\n    checked: {\n      publishes: true,\n      priority: 2000,\n      bind: function bind(el) {\n        var self = this;\n\n        if (!this.callback) {\n          this.callback = function () {\n            self.publish();\n          };\n        }\n\n        el.addEventListener('change', this.callback);\n      },\n      unbind: function unbind(el) {\n        el.removeEventListener('change', this.callback);\n      },\n      routine: function routine(el, value) {\n        if (el.type === 'radio') {\n          el.checked = getString(el.value) === getString(value);\n        } else {\n          el.checked = !!value;\n        }\n      }\n    },\n    // Sets the element's value. Also sets the model property when the input changes\n    // (two-way binder).\n    value: {\n      publishes: true,\n      priority: 3000,\n      bind: function bind(el) {\n        this.isRadio = el.tagName === 'INPUT' && el.type === 'radio';\n\n        if (!this.isRadio) {\n          this.event = el.getAttribute('event-name') || (el.tagName === 'SELECT' ? 'change' : 'input');\n          var self = this;\n\n          if (!this.callback) {\n            this.callback = function () {\n              self.publish();\n            };\n          }\n\n          el.addEventListener(this.event, this.callback);\n        }\n      },\n      unbind: function unbind(el) {\n        if (!this.isRadio) {\n          el.removeEventListener(this.event, this.callback);\n        }\n      },\n      routine: function routine(el, value) {\n        if (this.isRadio) {\n          el.setAttribute('value', value);\n        } else {\n          if (el.type === 'select-multiple') {\n            if (value instanceof Array) {\n              for (var i = 0; i < el.length; i++) {\n                var option = el[i];\n                option.selected = value.indexOf(option.value) > -1;\n              }\n            }\n          } else if (getString(value) !== getString(el.value)) {\n            el.value = value != null ? value : '';\n          }\n        }\n      }\n    },\n    // Inserts and binds the element and it's child nodes into the DOM when true.\n    if: {\n      block: true,\n      priority: 4000,\n      bind: function bind(el) {\n        if (!this.marker) {\n          this.marker = document.createComment(' tinybind: ' + this.type + ' ' + this.keypath + ' ');\n          this.attached = false;\n          el.parentNode.insertBefore(this.marker, el);\n          el.parentNode.removeChild(el);\n        } else if (this.bound === false && this.nested) {\n          this.nested.bind();\n        }\n\n        this.bound = true;\n      },\n      unbind: function unbind() {\n        if (this.nested) {\n          this.nested.unbind();\n          this.bound = false;\n        }\n      },\n      routine: function routine(el, value) {\n        if (!!value !== this.attached) {\n          if (value) {\n            if (!this.nested) {\n              this.nested = new View(el, this.view.models, this.view.options);\n              this.nested.bind();\n            }\n\n            this.marker.parentNode.insertBefore(el, this.marker.nextSibling);\n            this.attached = true;\n          } else {\n            el.parentNode.removeChild(el);\n            this.attached = false;\n          }\n        }\n      },\n      update: function update(models) {\n        if (this.nested) {\n          this.nested.update(models);\n        }\n      }\n    }\n  };\n\n  var formatters = {\n    watch: function watch(value) {\n      return value;\n    },\n    not: function not(value) {\n      return !value;\n    },\n    negate: function negate(value) {\n      return !value;\n    }\n  };\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _inheritsLoose(subClass, superClass) {\n    subClass.prototype = Object.create(superClass.prototype);\n    subClass.prototype.constructor = subClass;\n    subClass.__proto__ = superClass;\n  }\n\n  function _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n      return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n  }\n\n  function _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n      o.__proto__ = p;\n      return o;\n    };\n\n    return _setPrototypeOf(o, p);\n  }\n\n  function isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n\n    try {\n      Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function _construct(Parent, args, Class) {\n    if (isNativeReflectConstruct()) {\n      _construct = Reflect.construct;\n    } else {\n      _construct = function _construct(Parent, args, Class) {\n        var a = [null];\n        a.push.apply(a, args);\n        var Constructor = Function.bind.apply(Parent, a);\n        var instance = new Constructor();\n        if (Class) _setPrototypeOf(instance, Class.prototype);\n        return instance;\n      };\n    }\n\n    return _construct.apply(null, arguments);\n  }\n\n  function _isNativeFunction(fn) {\n    return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n  }\n\n  function _wrapNativeSuper(Class) {\n    var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n    _wrapNativeSuper = function _wrapNativeSuper(Class) {\n      if (Class === null || !_isNativeFunction(Class)) return Class;\n\n      if (typeof Class !== \"function\") {\n        throw new TypeError(\"Super expression must either be null or a function\");\n      }\n\n      if (typeof _cache !== \"undefined\") {\n        if (_cache.has(Class)) return _cache.get(Class);\n\n        _cache.set(Class, Wrapper);\n      }\n\n      function Wrapper() {\n        return _construct(Class, arguments, _getPrototypeOf(this).constructor);\n      }\n\n      Wrapper.prototype = Object.create(Class.prototype, {\n        constructor: {\n          value: Wrapper,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n      return _setPrototypeOf(Wrapper, Class);\n    };\n\n    return _wrapNativeSuper(Class);\n  }\n\n  var Component =\n  /*#__PURE__*/\n  function (_HTMLElement) {\n    _inheritsLoose(Component, _HTMLElement);\n\n    function Component() {\n      return _HTMLElement.apply(this, arguments) || this;\n    }\n\n    var _proto = Component.prototype;\n\n    _proto.connectedCallback = function connectedCallback() {\n      var nodes = this.constructor.__templateEl.content.cloneNode(true);\n\n      this.__tinybindView = tinybind.bind(nodes, this);\n\n      while (this.firstChild) {\n        this.removeChild(this.firstChild);\n      }\n\n      this.appendChild(nodes);\n    };\n\n    _proto.disconnectedCallback = function disconnectedCallback() {\n      this.__tinybindView.unbind();\n    };\n\n    _proto.attributeChangedCallback = function attributeChangedCallback(name, old, value) {\n      if (old !== value) {\n        var propName = this.constructor.__propAttributeMap[name];\n        this[propName] = value;\n      }\n    };\n\n    _createClass(Component, null, [{\n      key: \"observedAttributes\",\n      get: function get() {\n        var template = this.template;\n\n        if (!template) {\n          throw new Error(\"No template declared for \" + this.name);\n        }\n\n        this.__templateEl = document.createElement('template');\n        this.__templateEl.innerHTML = template;\n        var propAttributeMap = this.__propAttributeMap = {};\n        var attributes = [];\n        var properties = this.properties;\n\n        if (properties) {\n          Object.keys(properties).forEach(function (propName) {\n            var propConfig = properties[propName];\n            var attrName = typeof propConfig === 'string' ? propConfig : propName;\n            propAttributeMap[attrName] = propName;\n            attributes.push(attrName);\n          });\n        }\n\n        return attributes;\n      }\n    }]);\n\n    return Component;\n  }(_wrapNativeSuper(HTMLElement));\n\n  tinybind.binders = binders;\n  tinybind.formatters = formatters;\n  tinybind.adapters['.'] = adapter;\n  tinybind.Component = Component; // Binds some data to a template / element. Returns a tinybind.View instance.\n\n  tinybind.bind = function (el, models, options) {\n    var viewOptions = {};\n    models = models || {};\n    options = options || {};\n    EXTENSIONS.forEach(function (extensionType) {\n      viewOptions[extensionType] = Object.create(null);\n\n      if (options[extensionType]) {\n        Object.keys(options[extensionType]).forEach(function (key) {\n          viewOptions[extensionType][key] = options[extensionType][key];\n        });\n      }\n\n      Object.keys(tinybind[extensionType]).forEach(function (key) {\n        if (!viewOptions[extensionType][key]) {\n          viewOptions[extensionType][key] = tinybind[extensionType][key];\n        }\n      });\n    });\n    OPTIONS.forEach(function (option) {\n      var value = options[option];\n      viewOptions[option] = value != null ? value : tinybind[option];\n    });\n    viewOptions.starBinders = Object.keys(viewOptions.binders).filter(function (key) {\n      return key.indexOf('*') > 0;\n    });\n    Observer.updateOptions(viewOptions);\n    var view = new View(el, models, viewOptions);\n    view.bind();\n    return view;\n  };\n\n  return tinybind;\n\n}));\n//# sourceMappingURL=tinybind.js.map\n"],"sourceRoot":""}